# Guido van Rossum <guido@python.org>

def step1():
    print(
        '–£—Ç–∫–∞-–º–∞–ª—è—Ä ü¶Ü —Ä–µ—à–∏–ª–∞ –≤—ã–ø–∏—Ç—å –∑–∞–π—Ç–∏ –≤ –±–∞—Ä. '
        '–í–∑—è—Ç—å –µ–π –∑–æ–Ω—Ç–∏–∫? ‚òÇÔ∏è'
    )
    option = ''
    options = {'–¥–∞': True, '–Ω–µ—Ç': False}
    while option not in options:
        print('–í—ã–±–µ—Ä–∏—Ç–µ: {}/{}'.format(*options))
        option = input()

    if options[option]:
        return step2_umbrella()
    return step2_no_umbrella()


def step2_umbrella():
    print(
        '–£—Ç–∫–∞-–º–∞–ª—è—Ä –≤–∑—è–ª–∞ –∑–æ–Ω—Ç–∏–∫ –∏ –≤—ã—à–ª–∞ –∏–∑ –¥–æ–º–∞.',
        '–•–æ—Ä–æ—à–æ, —á—Ç–æ –≤–∑—è–ª–∞, —Ç–∞–º –ª–∏–≤–µ–Ω—å!',
        '–ö–æ–µ-–∫–∞–∫, —É—Ç–∫–∞ –¥–æ–ø–ª—ã–ª–∞ –¥–æ –±–∞—Ä–∞. –ß—Ç–æ –≤—ã–ø–∏—Ç—å —É—Ç–∫–µ, –≤–∏–Ω–æ –∏–ª–∏ –ø–∏–≤–æ?',
        '',
        sep='\n'
        )
    option = ''
    options = {'–≤–∏–Ω–æ': True, '–ø–∏–≤–æ': False}
    while option not in options:
        print('–í—ã–±–µ—Ä–∏—Ç–µ: {} –∏–ª–∏ {}?'.format(*options))
        option = input()

    if options[option] is True:
        print(
            '–£—Ç–∫–∞-–º–∞–ª—è—Ä –Ω–∞–ø–∏–ª–∞—Å—å –≤–∏–Ω–∞.',
            '–û–Ω–∞ –Ω–µ —Ñ–∞–Ω–∞—Ç –æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ —É–ø–æ—Ç—Ä–µ–±–ª–µ–Ω–∏—è –∞–ª–∫–æ–≥–æ–ª—è:(',
            '–ü–æ–ª–µ—Ç–µ–≤ –¥–æ–º–æ–π, —É—Ç–∫–∞ –∑–∞–±—ã–ª–∞ –∑–æ–Ω—Ç –≤ –±–∞—Ä–µ...',
            '',
            '–≠—Ö, –∑–∞–≤—Ç—Ä–∞ —Å–Ω–æ–≤–∞ –≤ –±–∞—Ä!',
            '',
            sep='\n'
            )

    else:
        print(
            '–£—Ç–∫–∞-–º–∞–ª—è—Ä –Ω–∞–ø–∏–ª–∞—Å—å –ø–∏–≤–∞...',
            '–°–¢–û–ü!',
            '–£—Ç–∫–∞–º –Ω–µ–ª—å–∑—è –ø–∏—Ç—å –ø–∏–≤–æ!',
            '–£—Ç–∫–∞-–º–∞–ª—è—Ä –ø–æ—á—É–≤—Å—Ç–≤–æ–≤–∞–ª–∞ —Å–µ–±—è –ø–ª–æ—Ö–æ –∏ –ö–†–Ø–ö–ù–£–õ–ê–°–¨.',
            '',
            '–ü–æ—Å–ª–µ —Å–º–µ—Ä—Ç–∏ —ç—Ç–æ–≥–æ –ø–µ—Ä—Å–æ–Ω–∞–∂–∞ –Ω–∏—Ç—å –≤–∞—à–µ–π —Å—É–¥—å–±—ã –æ–±—Ä—ã–≤–∞–µ—Ç—Å—è.',
            '–ñ–∏–≤–∏—Ç–µ –≤ –ø—Ä–æ–∫–ª—è—Ç–æ–º –º–∏—Ä–µ, –∫–æ—Ç–æ—Ä—ã–π —Å–∞–º–∏ –∏ —Å–æ–∑–¥–∞–ª–∏.',
            '',
            sep='\n'
            )


def step2_no_umbrella():
    print(
        '–£—Ç–∫–∞-–º–∞–ª—è—Ä –Ω–µ –≤–∑—è–ª–∞ –∑–æ–Ω—Ç–∏–∫ –∏ –≤—ã—à–ª–∞ –∏–∑ –¥–æ–º–∞.',
        '–ö–∞–∫ –æ–∫–∞–∑–∞–ª–æ—Å—å, –Ω–∞ —É–ª–∏—Ü–µ –∂—É—Ç–∫–∏–π –ª–∏–≤–µ–Ω—å!',
        '',
        '–£—Ç–∫–∞-–º–∞–ª—è—Ä —Ä–µ—à–∏–ª–∞ –¥–æ–ª–µ—Ç–µ—Ç—å –¥–æ –ö–ë - –æ–Ω –±–ª–∏–∂–µ, —á–µ–º –±–∞—Ä.',
        '–í –ö–ë –æ—Å—Ç–∞–ª–æ—Å—å —Ç–æ–ª—å–∫–æ –Ω–µ–≤–∫—É—Å–Ω–æ–µ –≤–∏–Ω–æ. –ö—É–ø–∏—Ç—å –µ–≥–æ?',
        '',
        sep='\n'
        )
    option = ''
    options = {'–¥–∞': True, '–Ω–µ—Ç': False}
    while option not in options:
        print('–í—ã–±–µ—Ä–∏—Ç–µ: {}/{}?'.format(*options))
        option = input()

    if options[option] is True:
        print(
            '–£—Ç–∫–∞-–º–∞–ª—è—Ä –∫—É–ø–∏–ª–∞ –≤–∏–Ω–æ –∏ –ø–æ–ª–µ—Ç–µ–ª–∞ –¥–æ–º–æ–π.',
            '–í –ø–æ–ª–µ—Ç–µ —É—Ç–∫–∞ –ø—Ä–æ–º–æ–∫–ª–∞.',
            '',
            '–ü—Ä–∏–ª–µ—Ç–µ–≤ –¥–æ–º–æ–π, —É—Ç–∫–∞ —Å–æ–≥—Ä–µ–ª–∞—Å—å –≤–∏–Ω–æ–º –∏ —É—Å–Ω—É–ª–∞ –ø–æ–¥ –ù–µ—Ç—Ñ–ª–∏–∫—Å.',
            '–ó–∞–≤—Ç—Ä–∞ –æ–ø—è—Ç—å –Ω–∞ —Ä–∞–±–æ—Ç—É, –∫—Ä–∞—Å–∏—Ç—å —Å—Ç–µ–Ω—ã...',
            '',
            sep='\n'
            )

    else:
        print(
            '–£—Ç–∫–∞-–º–∞–ª—è—Ä –≥—Ä—É—Å—Ç–Ω–æ –ø–æ—à–ª–∞ –¥–æ–º–æ–π –±–µ–∑ –±—É—Ö–ª–∏—à–∫–∞:(',
            '',
            '–û–∫–∞–∑–∞–≤—à–∏—Å—å –¥–æ–º–∞, —É—Ç–∫–∞ –∑–∞–¥—É–º–∞–ª–∞—Å—å –æ –∂–∏–∑–Ω–∏ –∏ –∑–∞–≥—Ä—É—Å—Ç–∏–ª–∞.',
            '–ó–∞—á–µ–º –≤—Å–µ —ç—Ç–æ?...',
            '',
            '–ü–æ—Ä–∞ –Ω–æ—Å–∏—Ç—å —Å —Å–æ–±–æ–π –∑–æ–Ω—Ç–∏–∫ –∏ —Å–ø–æ–∫–æ–π–Ω–æ —Ö–æ–¥–∏—Ç—å –≤ –±–∞—Ä—ã!',
            '',
            sep='\n'
            )


if __name__ == '__main__':
    step1()

#–¢–µ—Å—Ç–æ–≤—ã–π –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π